# Написать программу, которая будет выводить топ 10 самых часто встречающихся в новостях слов длиннее 6 символов для каждого файла.
# Не забываем про декомпозицию и организацию кода в функции. В решении домашнего задания вам могут помочь: split(), sort() или sorted().

def read_files(name):
    #'Функция чтения файлов'
    import json
    import chardet

    with open(name, 'rb') as f:
        data = f.read()
        result = chardet.detect(data)
        data = data.decode(result['encoding'])
        data = json.loads(data.lower())  # распарсеваем строку
        original_text = ''
        for items in data['rss']['channel']['items']:
            original_text += ' ' + items['description']
        return original_text


def count_word(original_text):
   #'функция подсчета слов длиннее 6 символов'
    to_list = original_text.split(' ')
    word_value = {}
    for word in to_list:
        if len(word) > 6:
            if word in word_value:
                word_value[word] += 1
            else:
                word_value[word] = 1
    return word_value  # возвращаем словарь {слово:количество}


def sort_top(word_value):
    #'функция сортировки и вывода ТОП-10'
    l = lambda word_value: word_value[1]
    sort_list = sorted(word_value.items(), key=l, reverse=True)
    count = 1
    top_10 = {}
    for word in sort_list:
        top_10[count] = word
        count += 1
        if count == 10:
            break
    return top_10


def main():
    #'главная функция: запрашивает имя файла, запускает другие функции'
    while True:
        name = input('Введите имя файла c расширением *.json: Выход - exit: ')
        if name.endswith(".json"):
            print('Идет обработка файла ...')
            top_10 = sort_top(count_word(read_files(name)))
            for i in top_10.values():
                print (i[1], ': ', i[0])
        elif name == 'exit':
            break
        else:
            print('Некорректный ввод, повторите еще раз.')


main()


#Задача №2.
#Написать программу для файла в формате xml.



import xml.etree.ElementTree as ET
tree = ET.parse("newsafr.xml")
root = tree.getroot()
words_dict = {}
xml_items = root.findall("channel/item")
for xmli in xml_items:
    #print(xmli.attrib["id"])
    #print(xmli.find("description").text)
    news_word = xmli.find("description").text.split()
    for word in news_word:
        if len(word) > 6:
            if word in words_dict.keys():
                words_dict[word] += 1
            else:
                words_dict[word] = 1


words_len_list = []

for key, value in words_dict.items():
    word_tuple = (value, key)
    words_len_list.append(word_tuple)
words_len_list_sorted = sorted(words_len_list)

print('Топ 10 встречаюшихся слов: ')
n = 10
for key, value in words_len_list_sorted[-10:]:
    print('Слово "{}" встречается {} раз'.format(value, key))
    n -= 1
    
    
    
